{"ast":null,"code":"var _jsxFileName = \"D:\\\\Netflix\\\\netflix-ui\\\\src\\\\pages\\\\UserListedMovies.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { firebaseAuth } from \"../utils/firebase-config\";\nimport Card from \"../components/Card\";\nimport styled from \"styled-components\";\nimport Navbar from \"../components/Navbar\";\nimport { getUsersLikedMovies } from \"../store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserListedMovies() {\n  _s();\n\n  const movies = useSelector(state => state.netflix.movies);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [email, setEmail] = useState(undefined);\n  onAuthStateChanged(firebaseAuth, currentUser => {\n    if (currentUser) setEmail(currentUser.email);else navigate(\"/login\");\n  });\n  useEffect(() => {\n    if (email) {\n      dispatch(getUsersLikedMovies(email));\n    }\n  }, [email]);\n\n  window.onscroll = () => {\n    setIsScrolled(window.pageYOffset === 0 ? false : true);\n    return () => window.onscroll = null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isScrolled: isScrolled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content flex column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid flex\",\n        children: movies.map((movie, index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            movieData: movie,\n            index: index,\n            isLiked: true\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserListedMovies, \"5ShkpzesJ9WqHIgBih7Bot5l8QY=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n\n_c = UserListedMovies;\nconst Container = styled.div`\n  .content {\n    margin: 2.3rem;\n    margin-top: 8rem;\n    gap: 3rem;\n    h1 {\n      margin-left: 3rem;\n    }\n    .grid {\n      flex-wrap: wrap;\n      gap: 1rem;\n    }\n  }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserListedMovies\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["D:/Netflix/netflix-ui/src/pages/UserListedMovies.jsx"],"names":["axios","onAuthStateChanged","React","useEffect","useState","useNavigate","firebaseAuth","Card","styled","Navbar","getUsersLikedMovies","useDispatch","useSelector","UserListedMovies","movies","state","netflix","dispatch","navigate","isScrolled","setIsScrolled","email","setEmail","undefined","currentUser","window","onscroll","pageYOffset","map","movie","index","id","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,mBAAT,QAAoC,UAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACzC,QAAMC,MAAM,GAAGF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,MAA1B,CAA1B;AACA,QAAMG,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAACmB,SAAD,CAAlC;AAEAtB,EAAAA,kBAAkB,CAACK,YAAD,EAAgBkB,WAAD,IAAiB;AAChD,QAAIA,WAAJ,EAAiBF,QAAQ,CAACE,WAAW,CAACH,KAAb,CAAR,CAAjB,KACKH,QAAQ,CAAC,QAAD,CAAR;AACN,GAHiB,CAAlB;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,KAAJ,EAAW;AACTJ,MAAAA,QAAQ,CAACP,mBAAmB,CAACW,KAAD,CAApB,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;;AAMAI,EAAAA,MAAM,CAACC,QAAP,GAAkB,MAAM;AACtBN,IAAAA,aAAa,CAACK,MAAM,CAACE,WAAP,KAAuB,CAAvB,GAA2B,KAA3B,GAAmC,IAApC,CAAb;AACA,WAAO,MAAOF,MAAM,CAACC,QAAP,GAAkB,IAAhC;AACD,GAHD;;AAKA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAEP;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAA,kBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACGL,MAAM,CAACc,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5B,8BACE,QAAC,IAAD;AACE,YAAA,SAAS,EAAED,KADb;AAEE,YAAA,KAAK,EAAEC,KAFT;AAIE,YAAA,OAAO,EAAE;AAJX,aAGOD,KAAK,CAACE,EAHb;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA3CuBlB,gB;UACPD,W,EACED,W,EACAN,W;;;KAHKQ,gB;AA6CxB,MAAMmB,SAAS,GAAGxB,MAAM,CAACyB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMD,S","sourcesContent":["import axios from \"axios\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { firebaseAuth } from \"../utils/firebase-config\";\r\nimport Card from \"../components/Card\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { getUsersLikedMovies } from \"../store\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function UserListedMovies() {\r\n  const movies = useSelector((state) => state.netflix.movies);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n  const [email, setEmail] = useState(undefined);\r\n\r\n  onAuthStateChanged(firebaseAuth, (currentUser) => {\r\n    if (currentUser) setEmail(currentUser.email);\r\n    else navigate(\"/login\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (email) {\r\n      dispatch(getUsersLikedMovies(email));\r\n    }\r\n  }, [email]);\r\n\r\n  window.onscroll = () => {\r\n    setIsScrolled(window.pageYOffset === 0 ? false : true);\r\n    return () => (window.onscroll = null);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Navbar isScrolled={isScrolled} />\r\n      <div className=\"content flex column\">\r\n        <h1>My List</h1>\r\n        <div className=\"grid flex\">\r\n          {movies.map((movie, index) => {\r\n            return (\r\n              <Card\r\n                movieData={movie}\r\n                index={index}\r\n                key={movie.id}\r\n                isLiked={true}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  .content {\r\n    margin: 2.3rem;\r\n    margin-top: 8rem;\r\n    gap: 3rem;\r\n    h1 {\r\n      margin-left: 3rem;\r\n    }\r\n    .grid {\r\n      flex-wrap: wrap;\r\n      gap: 1rem;\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Netflix\\\\netflix-ui\\\\src\\\\pages\\\\Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Navbar from \"../components/Navbar\";\nimport CardSlider from \"../components/CardSlider\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { firebaseAuth } from \"../utils/firebase-config\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchMovies, getGenres } from \"../store\";\nimport SelectGenre from \"../components/SelectGenre\";\nimport Slider from \"../components/Slider\";\nimport NotAvailable from \"../components/NotAvailable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MoviePage() {\n  _s();\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const movies = useSelector(state => state.netflix.movies);\n  const genres = useSelector(state => state.netflix.genres);\n  const genresLoaded = useSelector(state => state.netflix.genresLoaded);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getGenres());\n  }, []);\n  useEffect(() => {\n    if (genresLoaded) {\n      dispatch(fetchMovies({\n        genres,\n        type: \"movie\"\n      }));\n    }\n  }, [genresLoaded]);\n  const [user, setUser] = useState(undefined);\n  onAuthStateChanged(firebaseAuth, currentUser => {\n    if (currentUser) setUser(currentUser.uid);else navigate(\"/login\");\n  });\n\n  window.onscroll = () => {\n    setIsScrolled(window.pageYOffset === 0 ? false : true);\n    return () => window.onscroll = null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        isScrolled: isScrolled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data\",\n      children: [/*#__PURE__*/_jsxDEV(SelectGenre, {\n        genres: genres,\n        type: \"movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), movies.length ? /*#__PURE__*/_jsxDEV(Slider, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(NotAvailable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MoviePage, \"eZy0FvLuoa4HuNhxNMuOy6CVdvk=\", false, function () {\n  return [useSelector, useSelector, useSelector, useNavigate, useDispatch];\n});\n\n_c = MoviePage;\nconst Container = styled.div`\n  .data {\n    margin-top: 8rem;\n    .not-available {\n      text-align: center;\n      color: white;\n      margin-top: 4rem;\n    }\n  }\n`;\n_c2 = Container;\nexport default MoviePage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MoviePage\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["D:/Netflix/netflix-ui/src/pages/Movies.jsx"],"names":["React","useEffect","useState","styled","Navbar","CardSlider","onAuthStateChanged","firebaseAuth","useNavigate","useSelector","useDispatch","fetchMovies","getGenres","SelectGenre","Slider","NotAvailable","MoviePage","isScrolled","setIsScrolled","movies","state","netflix","genres","genresLoaded","navigate","dispatch","type","user","setUser","undefined","currentUser","uid","window","onscroll","pageYOffset","length","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,UAAvC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMiB,MAAM,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,MAA1B,CAA1B;AACA,QAAMG,MAAM,GAAGb,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,MAA1B,CAA1B;AACA,QAAMC,YAAY,GAAGd,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcE,YAA1B,CAAhC;AAEA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,QAAQ,GAAGf,WAAW,EAA5B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,QAAQ,CAACb,SAAS,EAAV,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,YAAJ,EAAkB;AAChBE,MAAAA,QAAQ,CAACd,WAAW,CAAC;AAAEW,QAAAA,MAAF;AAAUI,QAAAA,IAAI,EAAE;AAAhB,OAAD,CAAZ,CAAR;AACD;AACF,GAJQ,EAIN,CAACH,YAAD,CAJM,CAAT;AAMA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAC2B,SAAD,CAAhC;AAEAvB,EAAAA,kBAAkB,CAACC,YAAD,EAAgBuB,WAAD,IAAiB;AAChD,QAAIA,WAAJ,EAAiBF,OAAO,CAACE,WAAW,CAACC,GAAb,CAAP,CAAjB,KACKP,QAAQ,CAAC,QAAD,CAAR;AACN,GAHiB,CAAlB;;AAKAQ,EAAAA,MAAM,CAACC,QAAP,GAAkB,MAAM;AACtBf,IAAAA,aAAa,CAACc,MAAM,CAACE,WAAP,KAAuB,CAAvB,GAA2B,KAA3B,GAAmC,IAApC,CAAb;AACA,WAAO,MAAOF,MAAM,CAACC,QAAP,GAAkB,IAAhC;AACD,GAHD;;AAKA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,UAAU,EAAEhB;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEK,MAArB;AAA6B,QAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,EAEGH,MAAM,CAACgB,MAAP,gBAAgB,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEhB;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAhB,gBAA6C,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFhD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA1CQH,S;UAEQP,W,EACAA,W,EACMA,W,EAEJD,W,EACAE,W;;;KAPVM,S;AA4CT,MAAMoB,SAAS,GAAGjC,MAAM,CAACkC,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,S;AAUN,eAAepB,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport CardSlider from \"../components/CardSlider\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { firebaseAuth } from \"../utils/firebase-config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchMovies, getGenres } from \"../store\";\r\nimport SelectGenre from \"../components/SelectGenre\";\r\nimport Slider from \"../components/Slider\";\r\nimport NotAvailable from \"../components/NotAvailable\";\r\n\r\nfunction MoviePage() {\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n  const movies = useSelector((state) => state.netflix.movies);\r\n  const genres = useSelector((state) => state.netflix.genres);\r\n  const genresLoaded = useSelector((state) => state.netflix.genresLoaded);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getGenres());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (genresLoaded) {\r\n      dispatch(fetchMovies({ genres, type: \"movie\" }));\r\n    }\r\n  }, [genresLoaded]);\r\n\r\n  const [user, setUser] = useState(undefined);\r\n\r\n  onAuthStateChanged(firebaseAuth, (currentUser) => {\r\n    if (currentUser) setUser(currentUser.uid);\r\n    else navigate(\"/login\");\r\n  });\r\n\r\n  window.onscroll = () => {\r\n    setIsScrolled(window.pageYOffset === 0 ? false : true);\r\n    return () => (window.onscroll = null);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"navbar\">\r\n        <Navbar isScrolled={isScrolled} />\r\n      </div>\r\n      <div className=\"data\">\r\n        <SelectGenre genres={genres} type=\"movie\" />\r\n        {movies.length ? <Slider movies={movies} /> : <NotAvailable />}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  .data {\r\n    margin-top: 8rem;\r\n    .not-available {\r\n      text-align: center;\r\n      color: white;\r\n      margin-top: 4rem;\r\n    }\r\n  }\r\n`;\r\nexport default MoviePage;\r\n"]},"metadata":{},"sourceType":"module"}